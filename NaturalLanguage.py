"""Natural Language API implementation"""

# Imports the Google Cloud client library
from google.cloud import language
from google.cloud.language import enums
from google.cloud.language import types
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


def sentiment_value(lyric_index, data, sentiment_score, sentiment_mag):
    """Analysing lyrics for songs"""

    # Instantiates a client
    client = language.LanguageServiceClient()

    song_lyrics = data.Lyrics.tolist()

    # The text to analyze
    text = song_lyrics[lyric_index]
    document = types.Document(
        content=text,
        type=enums.Document.Type.PLAIN_TEXT)

    # Detects the sentiment of the text
    sentiment = client.analyze_sentiment(document=document).document_sentiment

    # print('Text: {}'.format(text))

    print('Sentiment: {}, {}'.format(sentiment.score, sentiment.magnitude))
    sentiment_score.append(sentiment.score)
    sentiment_mag.append(sentiment.magnitude)


def graph_data(sentiment_list):
    """Given the parameter of sentiments, plot the cartesian """

    plt.scatter(sentiment_list[0], sentiment_list[1])
    plt.ylabel('sentiment magnitude')
    plt.xlabel('sentiment value')
    plt.grid(True, which='major', axis='both')
    plt.show()


a = [0.0, 0.0, 0.699999988079071, 0.4000000059604645, 0.0, 0.5, 0.6000000238418579, -0.5, 0.20000000298023224, -0.4000000059604645, 0.0, 0.0, 0.10000000149011612, 0.20000000298023224, 0.20000000298023224, 0.5, 0.0, 0.0, 0.20000000298023224, 0.20000000298023224, 0.0, -0.20000000298023224, -0.20000000298023224, 0.20000000298023224, -0.4000000059604645, -0.5, 0.10000000149011612, 0.30000001192092896, 0.0, 0.30000001192092896, 0.6000000238418579, 0.30000001192092896, 0.20000000298023224, 0.0, -0.10000000149011612, 0.20000000298023224, 0.0, 0.6000000238418579, 0.4000000059604645, 0.0, 0.0, 0.20000000298023224, 0.0, 0.0, 0.20000000298023224, 0.10000000149011612, 0.0, 0.0, -0.4000000059604645, 0.0, 0.4000000059604645, 0.30000001192092896, 0.10000000149011612, 0.10000000149011612, 0.0, 0.30000001192092896, 0.30000001192092896, 0.5, 0.10000000149011612, 0.10000000149011612, -0.10000000149011612, 0.8999999761581421, 0.10000000149011612, 0.4000000059604645, 0.30000001192092896, 0.4000000059604645, 0.10000000149011612, 0.30000001192092896, 0.0, 0.0, 0.30000001192092896, 0.20000000298023224, 0.4000000059604645, 0.10000000149011612, 0.0, -0.20000000298023224, 0.5, 0.5, -0.10000000149011612, -0.800000011920929, 0.0, 0.0, 0.699999988079071, 0.5, 0.20000000298023224, 0.4000000059604645, 0.0, 0.0, -0.10000000149011612, 0.0, -0.4000000059604645, 0.30000001192092896, -0.10000000149011612, 0.10000000149011612, -0.10000000149011612, -0.10000000149011612, 0.4000000059604645, 0.10000000149011612, -0.30000001192092896, -0.10000000149011612], [0.0, 10.100000381469727, 9.699999809265137, 5.0, 4.5, 8.300000190734863, 8.800000190734863, 2.799999952316284, 6.099999904632568, 4.0, 4.099999904632568, 6.0, 3.299999952316284, 5.400000095367432, 6.900000095367432, 8.800000190734863, 4.199999809265137, 4.300000190734863, 3.9000000953674316, 6.0, 4.900000095367432, 1.2000000476837158, 2.200000047683716, 6.300000190734863, 6.0, 8.100000381469727, 9.0, 5.300000190734863, 5.900000095367432, 6.300000190734863, 4.400000095367432, 5.0, 6.699999809265137, 2.0, 4.699999809265137, 6.0, 6.099999904632568, 12.899999618530273, 6.199999809265137, 5.300000190734863, 5.199999809265137, 5.400000095367432, 5.300000190734863, 7.300000190734863, 4.5, 7.900000095367432, 4.099999904632568, 12.800000190734863, 5.300000190734863, 5.699999809265137, 9.0, 6.900000095367432, 3.799999952316284, 2.0999999046325684, 2.0999999046325684, 4.5, 11.100000381469727, 7.699999809265137, 6.800000190734863, 7.0, 5.400000095367432, 3.5999999046325684, 3.4000000953674316, 4.800000190734863, 6.099999904632568, 7.800000190734863, 5.900000095367432, 5.300000190734863, 7.800000190734863, 5.0, 3.700000047683716, 4.300000190734863, 4.0, 6.199999809265137, 2.799999952316284, 8.399999618530273, 6.300000190734863, 6.400000095367432, 5.5, 0.800000011920929, 2.9000000953674316, 5.199999809265137, 15.100000381469727, 11.199999809265137, 3.799999952316284, 4.400000095367432, 7.699999809265137, 3.200000047683716, 6.199999809265137, 3.700000047683716, 4.800000190734863, 3.0, 3.200000047683716, 9.0, 4.599999904632568, 8.399999618530273, 3.9000000953674316, 7.400000095367432, 0.30000001192092896, 1.899999976158142]

if __name__ == "__main__":

    data = pd.read_csv('sadData.csv')
    data.columns = ['Author', 'Title', 'Lyrics', 'Sentiment score', 'Sentiment magnitude']
    sentiment_score = []
    sentiment_mag = []

    print(data.Sentimentscore.toList())


    # graph_data([sentiment_score, sentiment_mag])
#     We have data from 57k songs. Add a
#     print(sentiment_score, sentiment_mag)
    data['Sentiment score'] = sentiment_score
    data['Sentiment magnitude'] = sentiment_mag
    data.to_csv('testData.csv')
